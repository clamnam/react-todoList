{"ast":null,"code":"var _jsxFileName = \"/Users/jackmoloneyobrien/Desktop/College/Front-End/react-todo-replacment/src/components/todolist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport TodoItem from \"./TodoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  let initialList = [{\n    id: 1,\n    text: \"Clean the office\",\n    done: true\n  }];\n  const [list, setList] = useState(initialList);\n  const [textinput, setTextInput] = useState(\"\");\n  const handleTextInput = e => {\n    setTextInput(e.target.value);\n  };\n  const addTodoItem = () => {\n    let newTodo = {\n      id: list[list.length - 1].id + 1,\n      text: textinput,\n      done: false\n    };\n    setList(prevlist => [...prevlist, newTodo]);\n    setTextInput(\"\");\n  };\n  const markAsDone = id => {\n    const newList = list.map(item => {\n      if (item.id === id) {\n        item.done = true;\n      }\n      return item;\n    });\n    setList(newList);\n  };\n  const deleteItem = id => {\n    const newList = list.filter(item => item.id !== id);\n    setList(newList);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: list.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n          todo: todo,\n          markAsDone: markAsDone,\n          deleteItem: deleteItem\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleTextInput,\n        value: textinput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"float-end\",\n        onClick: addTodoItem,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n_s(TodoList, \"ydX0Latn2HO3Y/tHlAO8EtGjLD0=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","Card","Button","ListGroup","TodoItem","jsxDEV","_jsxDEV","TodoList","_s","initialList","id","text","done","list","setList","textinput","setTextInput","handleTextInput","e","target","value","addTodoItem","newTodo","length","prevlist","markAsDone","newList","map","item","deleteItem","filter","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","Body","todo","Footer","type","onChange","variant","className","onClick","_c","$RefreshReg$"],"sources":["/Users/jackmoloneyobrien/Desktop/College/Front-End/react-todo-replacment/src/components/todolist.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport TodoItem from \"./TodoItem\";\n\nconst TodoList = () => {\n\tlet initialList = [{ id: 1, text: \"Clean the office\", done: true }];\n\tconst [list, setList] = useState(initialList);\n\tconst [textinput, setTextInput] = useState(\"\");\n\n\tconst handleTextInput = (e) => {\n\t\tsetTextInput(e.target.value);\n\t};\n\n\tconst addTodoItem = () => {\n\t\tlet newTodo = {\n\t\t\tid: list[list.length - 1].id + 1,\n\t\t\ttext: textinput,\n\t\t\tdone: false,\n\t\t};\n\n\t\tsetList((prevlist) => [...prevlist, newTodo]);\n\t\tsetTextInput(\"\");\n\t\t\n\t};\n\n\tconst markAsDone = (id) => {\n\t\tconst newList = list.map((item) => {\n\t\t\tif (item.id === id) {\n\t\t\t\titem.done = true;\n\t\t\t}\n\t\t\treturn item;\n\t\t});\n\n\t\tsetList(newList);\n\t};\n\n\tconst deleteItem = (id) => {\n\t\tconst newList = list.filter((item) => item.id !== id);\n\n\t\tsetList(newList);\n\t};\n\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Header></Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<ListGroup>\n\t\t\t\t\t{list.map((todo) => (\n\t\t\t\t\t\t<TodoItem\n\t\t\t\t\t\t\tkey={todo.id}\n\t\t\t\t\t\t\ttodo={todo}\n\t\t\t\t\t\t\tmarkAsDone={markAsDone}\n\t\t\t\t\t\t\tdeleteItem={deleteItem}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</ListGroup>\n\t\t\t</Card.Body>\n\t\t\t<Card.Footer>\n\t\t\t\t<input type=\"text\" onChange={handleTextInput} value={textinput} />\n\t\t\t\t<Button variant=\"primary\" className=\"float-end\" onClick={addTodoItem}>\n\t\t\t\t\tAdd\n\t\t\t\t</Button>\n\t\t\t</Card.Footer>\n\t\t</Card>\n\t);\n};\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}