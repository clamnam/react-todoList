{"ast":null,"code":"var _jsxFileName = \"/Users/jackmoloneyobrien/Desktop/College/Front-End/react-todo-replacment/src/components/TodoItem.js\";\nimport React from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { Badge } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoItem = props => {\n  let itemHtml = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"done\",\n      children: props.todo.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Badge, {\n      onClick: () => props.markasDone(props.todo.id),\n      className: \"float-end\",\n      children: \"\\uD83D\\uDC4D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n  if (props.todo.done) {\n    let itemHtml = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"done\",\n        children: props.todo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n        className: \"float-end\",\n        children: \"\\uD83D\\uDC4E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n    children: itemHtml\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","ListGroup","Badge","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoItem","props","itemHtml","children","className","todo","text","fileName","_jsxFileName","lineNumber","columnNumber","onClick","markasDone","id","done","Item","_c","$RefreshReg$"],"sources":["/Users/jackmoloneyobrien/Desktop/College/Front-End/react-todo-replacment/src/components/TodoItem.js"],"sourcesContent":["import React from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { Badge } from \"react-bootstrap\";\n\nconst TodoItem = (props) => {\n\tlet itemHtml = (\n\t\t<>\n\t\t\t<span className=\"done\">{props.todo.text}</span>\n\t\t\t<Badge onClick={()=>props.markasDone(props.todo.id)} className=\"float-end\">&#128077;</Badge>\n\t\t</>\n\t);\n\n\tif(props.todo.done){\n\t\tlet itemHtml = (\n\t\t\t<>\n\t\t\t<span className=\"done\">{props.todo.text}</span>\n\t\t\t<Badge className=\"float-end\">&#128078;</Badge>\n\t\t</>);\n\t\t}\n\n\treturn (\n\t\t<ListGroup.Item>\n\t\t\t{itemHtml}\n\t\t</ListGroup.Item>\n\t);\n};\n\nexport default TodoItem;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,2BAA2B;AACjD,SAASC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAC3B,IAAIC,QAAQ,gBACXL,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACCN,OAAA;MAAMO,SAAS,EAAC,MAAM;MAAAD,QAAA,EAAEF,KAAK,CAACI,IAAI,CAACC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC/Cb,OAAA,CAACF,KAAK;MAACgB,OAAO,EAAEA,CAAA,KAAIV,KAAK,CAACW,UAAU,CAACX,KAAK,CAACI,IAAI,CAACQ,EAAE,CAAE;MAACT,SAAS,EAAC,WAAW;MAAAD,QAAA,EAAC;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA,eAC3F,CACF;EAED,IAAGT,KAAK,CAACI,IAAI,CAACS,IAAI,EAAC;IAClB,IAAIZ,QAAQ,gBACXL,OAAA,CAAAE,SAAA;MAAAI,QAAA,gBACAN,OAAA;QAAMO,SAAS,EAAC,MAAM;QAAAD,QAAA,EAAEF,KAAK,CAACI,IAAI,CAACC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/Cb,OAAA,CAACF,KAAK;QAACS,SAAS,EAAC,WAAW;QAAAD,QAAA,EAAC;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,eAC7C,CAAE;EACJ;EAED,oBACCb,OAAA,CAACH,SAAS,CAACqB,IAAI;IAAAZ,QAAA,EACbD;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEnB,CAAC;AAACM,EAAA,GArBIhB,QAAQ;AAuBd,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}