{"ast":null,"code":"var _jsxFileName = \"/Users/jackmoloneyobrien/Desktop/College/Front-End/react-todo-replacment/src/components/todolist.js\",\n  _s = $RefreshSig$();\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport TodoItem from \"./TodoItem\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  let initialList = [{\n    id: 1,\n    text: 'Clean the office',\n    done: true\n  }, {\n    id: 2,\n    text: 'Clean the office',\n    done: false\n  }, {\n    id: 3,\n    text: 'Clean the office',\n    done: false\n  }, {\n    id: 4,\n    text: 'Clean the office',\n    done: true\n  }];\n  const [list, SetList] = useState(initialList);\n  const [textinput, SetTextinput] = useState(initialList);\n  const TodoItems = list.map(item => {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  });\n  const handleTextInput = e => {\n    SetTextinput(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: TodoItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"float-end\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n};\n_s(TodoList, \"tFx9RRzsrJ2KbM3gC3MHR+BBC9A=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["Card","Button","ListGroup","TodoItem","useState","jsxDEV","_jsxDEV","TodoList","_s","initialList","id","text","done","list","SetList","textinput","SetTextinput","TodoItems","map","item","todo","fileName","_jsxFileName","lineNumber","columnNumber","handleTextInput","e","target","value","children","Header","Body","Footer","variant","className","_c","$RefreshReg$"],"sources":["/Users/jackmoloneyobrien/Desktop/College/Front-End/react-todo-replacment/src/components/todolist.js"],"sourcesContent":["import Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n import TodoItem from \"./TodoItem\";\nimport { useState } from 'react'\n\n\nconst TodoList = () => {\n    let initialList = [\n    {id:1, text:'Clean the office',done:true},\n    {id:2, text:'Clean the office',done:false},\n    {id:3, text:'Clean the office',done:false},\n    {id:4, text:'Clean the office',done:true},]\n    const [list,SetList] = useState(initialList);\n    const [textinput,SetTextinput] = useState(initialList);\n\n    const TodoItems = list.map((item) => {\n        return <TodoItem key={item.id} todo={item} />;\n      });\n    const handleTextInput =(e) =>{\n        SetTextinput(e.target.value);\n    };\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Header></Card.Header>\n\t\t\t<Card.Body>\n                <ListGroup>\n                    {TodoItems}\n\n                </ListGroup>\n\t\t\t</Card.Body>\n\t\t\t<Card.Footer>\n                {/* <input type='text' onChange={handleTextInput} value={textinput} /> */}\n\t\t\t\t<Button variant=\"primary\" className=\"float-end\">\n\t\t\t\t\tAdd\n\t\t\t\t</Button>\n\t\t\t</Card.Footer>\n\t\t</Card>\n\t);\n};\nexport default TodoList;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,sBAAsB;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,SAAS,MAAM,2BAA2B;AAChD,OAAOC,QAAQ,MAAM,YAAY;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,IAAIC,WAAW,GAAG,CAClB;IAACC,EAAE,EAAC,CAAC;IAAEC,IAAI,EAAC,kBAAkB;IAACC,IAAI,EAAC;EAAI,CAAC,EACzC;IAACF,EAAE,EAAC,CAAC;IAAEC,IAAI,EAAC,kBAAkB;IAACC,IAAI,EAAC;EAAK,CAAC,EAC1C;IAACF,EAAE,EAAC,CAAC;IAAEC,IAAI,EAAC,kBAAkB;IAACC,IAAI,EAAC;EAAK,CAAC,EAC1C;IAACF,EAAE,EAAC,CAAC;IAAEC,IAAI,EAAC,kBAAkB;IAACC,IAAI,EAAC;EAAI,CAAC,CAAE;EAC3C,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGV,QAAQ,CAACK,WAAW,CAAC;EAC5C,MAAM,CAACM,SAAS,EAACC,YAAY,CAAC,GAAGZ,QAAQ,CAACK,WAAW,CAAC;EAEtD,MAAMQ,SAAS,GAAGJ,IAAI,CAACK,GAAG,CAAEC,IAAI,IAAK;IACjC,oBAAOb,OAAA,CAACH,QAAQ;MAAeiB,IAAI,EAAED;IAAK,GAApBA,IAAI,CAACT,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC;EAC/C,CAAC,CAAC;EACJ,MAAMC,eAAe,GAAGC,CAAC,IAAI;IACzBV,YAAY,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EACJ,oBACCtB,OAAA,CAACN,IAAI;IAAA6B,QAAA,gBACJvB,OAAA,CAACN,IAAI,CAAC8B,MAAM;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eAC3BlB,OAAA,CAACN,IAAI,CAAC+B,IAAI;MAAAF,QAAA,eACGvB,OAAA,CAACJ,SAAS;QAAA2B,QAAA,EACLZ;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACZlB,OAAA,CAACN,IAAI,CAACgC,MAAM;MAAAH,QAAA,eAEXvB,OAAA,CAACL,MAAM;QAACgC,OAAO,EAAC,SAAS;QAACC,SAAS,EAAC,WAAW;QAAAL,QAAA,EAAC;MAEhD;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAET,CAAC;AAAChB,EAAA,CAhCID,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}